
package com.flexnet.external.webservice.keygenerator;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.10
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "LicenseGeneratorService", targetNamespace = "urn:keygenerator.webservice.external.flexnet.com", wsdlLocation = "file:/D:/gcs/hcl-bss-generator-service/schema/LicenseGeneratorService.wsdl")
public class LicenseGeneratorService
    extends Service
{

    private final static URL LICENSEGENERATORSERVICE_WSDL_LOCATION;
    private final static WebServiceException LICENSEGENERATORSERVICE_EXCEPTION;
    private final static QName LICENSEGENERATORSERVICE_QNAME = new QName("urn:keygenerator.webservice.external.flexnet.com", "LicenseGeneratorService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("file:/D:/gcs/hcl-bss-generator-service/schema/LicenseGeneratorService.wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        LICENSEGENERATORSERVICE_WSDL_LOCATION = url;
        LICENSEGENERATORSERVICE_EXCEPTION = e;
    }

    public LicenseGeneratorService() {
        super(__getWsdlLocation(), LICENSEGENERATORSERVICE_QNAME);
    }

    public LicenseGeneratorService(WebServiceFeature... features) {
        super(__getWsdlLocation(), LICENSEGENERATORSERVICE_QNAME, features);
    }

    public LicenseGeneratorService(URL wsdlLocation) {
        super(wsdlLocation, LICENSEGENERATORSERVICE_QNAME);
    }

    public LicenseGeneratorService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, LICENSEGENERATORSERVICE_QNAME, features);
    }

    public LicenseGeneratorService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public LicenseGeneratorService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * External Interface to validate product, license model and generate License 
     * 
     * @return
     *     returns LicenseGeneratorServiceInterface
     */
    @WebEndpoint(name = "LicenseGeneratorServicePort")
    public LicenseGeneratorServiceInterface getLicenseGeneratorServicePort() {
        return super.getPort(new QName("urn:keygenerator.webservice.external.flexnet.com", "LicenseGeneratorServicePort"), LicenseGeneratorServiceInterface.class);
    }

    /**
     * External Interface to validate product, license model and generate License 
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns LicenseGeneratorServiceInterface
     */
    @WebEndpoint(name = "LicenseGeneratorServicePort")
    public LicenseGeneratorServiceInterface getLicenseGeneratorServicePort(WebServiceFeature... features) {
        return super.getPort(new QName("urn:keygenerator.webservice.external.flexnet.com", "LicenseGeneratorServicePort"), LicenseGeneratorServiceInterface.class, features);
    }

    private static URL __getWsdlLocation() {
        if (LICENSEGENERATORSERVICE_EXCEPTION!= null) {
            throw LICENSEGENERATORSERVICE_EXCEPTION;
        }
        return LICENSEGENERATORSERVICE_WSDL_LOCATION;
    }

}
