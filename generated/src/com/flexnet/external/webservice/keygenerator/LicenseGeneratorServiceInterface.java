
package com.flexnet.external.webservice.keygenerator;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;
import com.flexnet.external.type.ConsolidatedLicense;
import com.flexnet.external.type.ConsolidatedLicenseResquest;
import com.flexnet.external.type.FulfillmentRecordSet;
import com.flexnet.external.type.GeneratorRequest;
import com.flexnet.external.type.GeneratorResponse;
import com.flexnet.external.type.HostIdRequest;
import com.flexnet.external.type.LicenseFileDefinitionMap;
import com.flexnet.external.type.LicenseModelRequest;
import com.flexnet.external.type.ObjectFactory;
import com.flexnet.external.type.PingRequest;
import com.flexnet.external.type.PingResponse;
import com.flexnet.external.type.ProductRequest;
import com.flexnet.external.type.Status;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.10
 * Generated source version: 2.2
 * 
 */
@WebService(name = "LicenseGeneratorServiceInterface", targetNamespace = "urn:keygenerator.webservice.external.flexnet.com")
@SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
@XmlSeeAlso({
    ObjectFactory.class
})
public interface LicenseGeneratorServiceInterface {


    /**
     * 
     * @param request
     * @return
     *     returns com.flexnet.external.type.PingResponse
     * @throws LicGeneratorException
     */
    @WebMethod(action = "ping")
    @WebResult(name = "pingResponse", targetNamespace = "urn:com.flexnet.external.type", partName = "response")
    public PingResponse ping(
        @WebParam(name = "pingRequest", targetNamespace = "urn:com.flexnet.external.type", partName = "request")
        PingRequest request)
        throws LicGeneratorException
    ;

    /**
     * 
     * @param product
     * @return
     *     returns com.flexnet.external.type.Status
     * @throws LicGeneratorException
     */
    @WebMethod(action = "validateProduct")
    @WebResult(name = "Status", targetNamespace = "urn:com.flexnet.external.type", partName = "response")
    public Status validateProduct(
        @WebParam(name = "ProductRequest", targetNamespace = "urn:com.flexnet.external.type", partName = "product")
        ProductRequest product)
        throws LicGeneratorException
    ;

    /**
     * 
     * @param model
     * @return
     *     returns com.flexnet.external.type.Status
     * @throws LicGeneratorException
     */
    @WebMethod(action = "validateLicenseModel")
    @WebResult(name = "Status", targetNamespace = "urn:com.flexnet.external.type", partName = "response")
    public Status validateLicenseModel(
        @WebParam(name = "LicenseModelRequest", targetNamespace = "urn:com.flexnet.external.type", partName = "model")
        LicenseModelRequest model)
        throws LicGeneratorException
    ;

    /**
     * 
     * @param request
     * @return
     *     returns com.flexnet.external.type.GeneratorResponse
     * @throws LicGeneratorException
     */
    @WebMethod(action = "generateLicense")
    @WebResult(name = "GeneratorResponse", targetNamespace = "urn:com.flexnet.external.type", partName = "generatedLicense")
    public GeneratorResponse generateLicense(
        @WebParam(name = "GeneratorRequest", targetNamespace = "urn:com.flexnet.external.type", partName = "request")
        GeneratorRequest request)
        throws LicGeneratorException
    ;

    /**
     * 
     * @param fulfillmentRecordset
     * @return
     *     returns com.flexnet.external.type.ConsolidatedLicense
     * @throws LicGeneratorException
     */
    @WebMethod(action = "consolidateFulfillments")
    @WebResult(name = "ConsolidatedLicense", targetNamespace = "urn:com.flexnet.external.type", partName = "response")
    public ConsolidatedLicense consolidateFulfillments(
        @WebParam(name = "FulfillmentRecordSet", targetNamespace = "urn:com.flexnet.external.type", partName = "fulfillmentRecordset")
        FulfillmentRecordSet fulfillmentRecordset)
        throws LicGeneratorException
    ;

    /**
     * 
     * @param fileRec
     * @return
     *     returns com.flexnet.external.type.LicenseFileDefinitionMap
     * @throws LicGeneratorException
     */
    @WebMethod(action = "generateLicenseFilenames")
    @WebResult(name = "LicenseFileDefinitionMap", targetNamespace = "urn:com.flexnet.external.type", partName = "fileNameResponse")
    public LicenseFileDefinitionMap generateLicenseFilenames(
        @WebParam(name = "FileNamesRequest", targetNamespace = "urn:com.flexnet.external.type", partName = "fileRec")
        GeneratorRequest fileRec)
        throws LicGeneratorException
    ;

    /**
     * 
     * @param clRec
     * @return
     *     returns com.flexnet.external.type.LicenseFileDefinitionMap
     * @throws LicGeneratorException
     */
    @WebMethod(action = "generateConsolidatedLicenseFilenames")
    @WebResult(name = "LicenseFileDefinitionMap", targetNamespace = "urn:com.flexnet.external.type", partName = "consoldatedFileNames")
    public LicenseFileDefinitionMap generateConsolidatedLicenseFilenames(
        @WebParam(name = "ConsolidatedLicenseResquest", targetNamespace = "urn:com.flexnet.external.type", partName = "clRec")
        ConsolidatedLicenseResquest clRec)
        throws LicGeneratorException
    ;

    /**
     * 
     * @param hostIdReq
     * @return
     *     returns java.lang.String
     * @throws LicGeneratorException
     */
    @WebMethod(action = "generateCustomHostIdentifier")
    @WebResult(name = "HostIdResponse", targetNamespace = "urn:com.flexnet.external.type", partName = "hostIdRes")
    public String generateCustomHostIdentifier(
        @WebParam(name = "HostIdRequest", targetNamespace = "urn:com.flexnet.external.type", partName = "hostIdReq")
        HostIdRequest hostIdReq)
        throws LicGeneratorException
    ;

}
